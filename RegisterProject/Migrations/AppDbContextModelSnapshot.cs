// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegisterProject.Data;

namespace RegisterProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RegisterProject.Data.Domains.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("CityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeSchoolId")
                        .HasColumnType("int");

                    b.Property<int>("GeographicLibraryId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeographicLibraryId");

                    b.HasIndex("MediaId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("RegisterProject.Data.Domains.EmployeeSchool", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("GraduatedSchoolId")
                        .HasColumnType("int");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GraduatedSchoolId");

                    b.ToTable("EmployeeSchools");
                });

            modelBuilder.Entity("RegisterProject.Data.Domains.GeographicLibrary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tanim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UstId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeographicLibraries");
                });

            modelBuilder.Entity("RegisterProject.Data.Domains.GraduatedSchool", b =>
                {
                    b.Property<int>("GraduatedSchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GraduatedSchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.HasKey("GraduatedSchoolId");

                    b.HasIndex("SchoolId");

                    b.ToTable("GraduatedSchools");
                });

            modelBuilder.Entity("RegisterProject.Data.Domains.MediaLibrary", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReorganizedPictureName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MediaId");

                    b.ToTable("MediaLibraries");
                });

            modelBuilder.Entity("RegisterProject.Data.Domains.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("RegisterProject.Data.Domains.Employee", b =>
                {
                    b.HasOne("RegisterProject.Data.Domains.GeographicLibrary", "GeographicLibrary")
                        .WithMany()
                        .HasForeignKey("GeographicLibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegisterProject.Data.Domains.MediaLibrary", "MediaLibrary")
                        .WithMany("Employees")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeographicLibrary");

                    b.Navigation("MediaLibrary");
                });

            modelBuilder.Entity("RegisterProject.Data.Domains.EmployeeSchool", b =>
                {
                    b.HasOne("RegisterProject.Data.Domains.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegisterProject.Data.Domains.GraduatedSchool", "GraduatedSchool")
                        .WithMany()
                        .HasForeignKey("GraduatedSchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("GraduatedSchool");
                });

            modelBuilder.Entity("RegisterProject.Data.Domains.GraduatedSchool", b =>
                {
                    b.HasOne("RegisterProject.Data.Domains.School", null)
                        .WithMany("GraduatedSchools")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RegisterProject.Data.Domains.MediaLibrary", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("RegisterProject.Data.Domains.School", b =>
                {
                    b.Navigation("GraduatedSchools");
                });
#pragma warning restore 612, 618
        }
    }
}
